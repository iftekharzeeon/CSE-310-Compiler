Line 1: type_specifier : INT

int

Line 1: declaration_list : ID

a

Line 1: declaration_list : declaration_list COMMA ID

a,b

Line 1: declaration_list : declaration_list COMMA ID

a,b,c

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

int a,b,c;

Line 1: unit : var_declaration

int a,b,c;


Line 1: program : unit

int a,b,c;


Line 3: type_specifier : VOID

void

Line 4: variable : ID

a

Line 4: factor : CONST_INT

7

Line 4: unary_expression : factor

7

Line 4: term : unary_expression

7

Line 4: simple_expression : term

7

Line 4: rel_expression : simple_expression

7

Line 4: logic_expression : rel_expression

7

Line 4: expression : variable ASSIGNOP logic_expression

a=7

Line 4: expression_statement : expression SEMICOLON

a=7;

Line 4: statement : expression_statement

a=7;

Line 4: statements : statement

a=7;

Line 5: compound_statement : LCURL statements RCURL

{
a=7;
}


ScopeTable# 1.1

ScopeTable# 1
0 --> <b : ID> 
1 --> <c : ID> 
3 --> <func_a : ID> 
6 --> <a : ID> 

Line 5: func_definition : type_specifier ID LPAREN RPAREN compound_statement

void func_a(){
a=7;
}


Line 5: unit : func_definition

void func_a(){
a=7;
}



Line 5: program : program unit

int a,b,c;
void func_a(){
a=7;
}



Line 19: type_specifier : INT

int

Line 21: type_specifier : INT

int

Line 21: declaration_list : ID

i

Line 21: declaration_list : declaration_list COMMA ID

i,j

Line 21: declaration_list : declaration_list COMMA ID

i,j,k

Line 21: declaration_list : declaration_list COMMA ID

i,j,k,l

Line 21: var_declaration : type_specifier declaration_list SEMICOLON

int i,j,k,l;

Line 21: statement : var_declaration

int i,j,k,l;

Line 21: statements : statement

int i,j,k,l;

Line 23: variable : ID

i

Line 23: factor : CONST_INT

5

Line 23: unary_expression : factor

5

Line 23: term : unary_expression

5

Line 23: simple_expression : term

5

Line 23: rel_expression : simple_expression

5

Line 23: logic_expression : rel_expression

5

Line 23: expression : variable ASSIGNOP logic_expression

i=5

Line 23: expression_statement : expression SEMICOLON

i=5;

Line 23: statement : expression_statement

i=5;

Line 23: statements : statements statement

int i,j,k,l;
i=5;

Line 24: variable : ID

j

Line 24: factor : CONST_INT

6

Line 24: unary_expression : factor

6

Line 24: term : unary_expression

6

Line 24: simple_expression : term

6

Line 24: rel_expression : simple_expression

6

Line 24: logic_expression : rel_expression

6

Line 24: expression : variable ASSIGNOP logic_expression

j=6

Line 24: expression_statement : expression SEMICOLON

j=6;

Line 24: statement : expression_statement

j=6;

Line 24: statements : statements statement

int i,j,k,l;
i=5;
j=6;

Line 26: factor : ID LPAREN argument_list RPAREN

func_a()

Line 26: unary_expression : factor

func_a()

Line 26: term : unary_expression

func_a()

Line 26: simple_expression : term

func_a()

Line 26: rel_expression : simple_expression

func_a()

Line 26: logic_expression : rel_expression

func_a()

Line 26: expression : logic_expression

func_a()

Line 26: expression_statement : expression SEMICOLON

func_a();

Line 26: statement : expression_statement

func_a();

Line 26: statements : statements statement

int i,j,k,l;
i=5;
j=6;
func_a();

Line 27: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

printf(a);

Line 27: statements : statements statement

int i,j,k,l;
i=5;
j=6;
func_a();
printf(a);

Line 39: factor : CONST_INT

0

Line 39: unary_expression : factor

0

Line 39: term : unary_expression

0

Line 39: simple_expression : term

0

Line 39: rel_expression : simple_expression

0

Line 39: logic_expression : rel_expression

0

Line 39: expression : logic_expression

0

Line 39: statement : RETURN expression SEMICOLON

return 0;

Line 39: statements : statements statement

int i,j,k,l;
i=5;
j=6;
func_a();
printf(a);
return 0;

Line 40: compound_statement : LCURL statements RCURL

{
int i,j,k,l;
i=5;
j=6;
func_a();
printf(a);
return 0;
}


ScopeTable# 1.2
0 --> <i : ID> 
1 --> <j : ID> 
2 --> <k : ID> 
3 --> <l : ID> 

ScopeTable# 1
0 --> <b : ID> 
1 --> <c : ID> 
3 --> <func_a : ID> 
6 --> <a : ID> <main : ID> 

Line 40: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int i,j,k,l;
i=5;
j=6;
func_a();
printf(a);
return 0;
}


Line 40: unit : func_definition

int main(){
int i,j,k,l;
i=5;
j=6;
func_a();
printf(a);
return 0;
}



Line 40: program : program unit

int a,b,c;
void func_a(){
a=7;
}

int main(){
int i,j,k,l;
i=5;
j=6;
func_a();
printf(a);
return 0;
}



Line 42: start : program


ScopeTable# 1
0 --> <b : ID> 
1 --> <c : ID> 
3 --> <func_a : ID> 
6 --> <a : ID> <main : ID> 

Total lines: 42
Total errors: 0

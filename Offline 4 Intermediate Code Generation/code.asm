.MODEL SMALL
.STACK 100H

.DATA
	CR EQU 0DH
	LF EQU 0AH
	VAR_TO_PRINT DW ?
	COUNT DW ?

	a_1 DW ?
	b_2 DW ?
	c_3 DW ?
	i_4 DW ?
	j_5 DW ?
	k_6 DW ?
	l_7 DW ?

.CODE
MAIN PROC
	;DATA INIT
	MOV AX, @DATA
	MOV DS, AX


	PUSH 5
	;i = 5
	POP CX
	MOV i_4, CX
	PUSH 6
	;j = 6
	POP CX
	MOV j_5, CX
	;Call Proc func_a
	CALL FUNC_A
	;println(a)
	MOV CX, a_1
	MOV VAR_TO_PRINT, CX
	CALL NEW_LINE
	CALL PRINT_VAR
	CALL NEW_LINE
	PUSH 0

	;EXIT PROGRAM
	MOV AH, 4CH
	INT 21H

	MAIN ENDP

PRINT_VAR PROC

	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

	MOV COUNT, 0

	MOV AX, VAR_TO_PRINT
	CMP AX, 0
	JL NEGATIVE_PRINT

START_DIVISION:
	MOV DX, 0
	MOV CX, 10
	DIV CX
	PUSH DX
	ADD COUNT, 1
	CMP AX, 0
	JE POP_STACK
	JMP START_DIVISION

NEGATIVE_PRINT:
	MOV CX, AX

	;PRINT MINUS SIGN
	MOV DL, '-'
	MOV AH, 2
	INT 21H

	MOV AX, CX
	NEG AX
	JMP START_DIVISION

POP_STACK:
	POP DX
	ADD DL, '0'
	MOV AH, 2
	INT 21H

	SUB COUNT, 1
	MOV CX, COUNT
	CMP CX, 0
	JNE POP_STACK

	POP DX
	POP CX
	POP BX
	POP AX

	RET

	PRINT_VAR ENDP


NEW_LINE PROC

	MOV AH, 2
	MOV DL, CR
	INT 21H
	MOV AH, 2
	MOV DL, LF
	INT 21H

	RET

	NEW_LINE ENDP


FUNC_A PROC

	PUSH 7
	;a = 7
	POP CX
	MOV a_1, CX

	RET

FUNC_A ENDP

END MAIN

Line 1: type_specifier : INT

int

Line 1: declaration_list : ID

a

Line 1: declaration_list : declaration_list COMMA ID

a,b

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

int a,b;

Line 1: unit : var_declaration

int a,b;


Line 1: program : unit

int a,b;


Line 2: type_specifier : INT

int

Error at line 2: Multiple declaration of b

Line 2: declaration_list : ID

b

Line 2: var_declaration : type_specifier declaration_list SEMICOLON

int b;

Line 2: unit : var_declaration

int b;


Line 2: program : program unit

int a,b;
int b;


Line 4: type_specifier : INT

int

Line 4: type_specifier : INT

int

Line 4: parameter_list : type_specifier ID

int a

Line 4: type_specifier : INT

int

Line 4: parameter_list : parameter_list COMMA type_specifier ID

int a,int b

Line 5: type_specifier : INT

int

Line 5: declaration_list : ID

b

Line 5: var_declaration : type_specifier declaration_list SEMICOLON

int b;

Line 5: statement : var_declaration

int b;

Line 5: statements : statement

int b;

Line 6: variable : ID

a

Line 6: factor : variable

a

Line 6: unary_expression : factor

a

Line 6: term : unary_expression

a

Line 6: simple_expression : term

a

Line 6: rel_expression : simple_expression

a

Line 6: logic_expression : rel_expression

a

Line 6: expression : logic_expression

a

Line 6: statement : RETURN expression SEMICOLON

return a;

Line 6: statements : statements statement

int b;
return a;

Line 7: compound_statement : LCURL statements RCURL

{
int b;
return a;
}


ScopeTable# 1.1
0 --> <b : ID> 

ScopeTable# 1
0 --> <b : ID> 
2 --> <func : ID> 
6 --> <a : ID> 

Line 7: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int func(int a,int b){
int b;
return a;
}


Line 7: unit : func_definition

int func(int a,int b){
int b;
return a;
}



Line 7: program : program unit

int a,b;
int b;
int func(int a,int b){
int b;
return a;
}



Line 9: type_specifier : INT

int

Line 10: type_specifier : INT

int

Line 10: declaration_list : ID LTHIRD CONST_INT RTHIRD

a[2]

Line 10: declaration_list : declaration_list COMMA ID

a[2],c

Line 10: declaration_list : declaration_list COMMA ID

a[2],c,i

Line 10: declaration_list : declaration_list COMMA ID

a[2],c,i,j

Line 10: var_declaration : type_specifier declaration_list SEMICOLON

int a[2],c,i,j;

Line 10: statement : var_declaration

int a[2],c,i,j;

Line 10: statements : statement

int a[2],c,i,j;

Line 10: type_specifier : FLOAT

float

Error at line 10: Multiple declaration of c

Line 10: declaration_list : ID

c

Line 10: var_declaration : type_specifier declaration_list SEMICOLON

float c;

Line 10: statement : var_declaration

float c;

Line 10: statements : statements statement

int a[2],c,i,j;
float c;

Line 11: factor : CONST_FLOAT

2.5

Line 11: unary_expression : factor

2.5

Line 11: term : unary_expression

2.5

Line 11: simple_expression : term

2.5

Line 11: rel_expression : simple_expression

2.5

Line 11: logic_expression : rel_expression

2.5

Line 11: expression : logic_expression

2.5

Line 11: variable : ID LTHIRD expression RTHIRD

a[2.5]

Line 11: factor : CONST_INT

1

Line 11: unary_expression : factor

1

Line 11: term : unary_expression

1

Line 11: simple_expression : term

1

Line 11: rel_expression : simple_expression

1

Line 11: logic_expression : rel_expression

1

Line 11: expression : variable ASSIGNOP logic_expression

a[2.5]=1

Line 11: expression_statement : expression SEMICOLON

a[2.5]=1;

Line 11: statement : expression_statement

a[2.5]=1;

Line 11: statements : statements statement

int a[2],c,i,j;
float c;
a[2.5]=1;

Line 12: variable : ID

i

Line 12: factor : CONST_FLOAT

2.3

Line 12: unary_expression : factor

2.3

Line 12: term : unary_expression

2.3

Line 12: simple_expression : term

2.3

Line 12: rel_expression : simple_expression

2.3

Line 12: logic_expression : rel_expression

2.3

Line 12: expression : variable ASSIGNOP logic_expression

i=2.3

Line 12: expression_statement : expression SEMICOLON

i=2.3;

Line 12: statement : expression_statement

i=2.3;

Line 12: statements : statements statement

int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;

Line 13: variable : ID

j

Line 13: factor : CONST_INT

2

Line 13: unary_expression : factor

2

Line 13: term : unary_expression

2

Line 13: factor : CONST_FLOAT

3.7

Line 13: unary_expression : factor

3.7

Line 13: term : term MULOP unary_expression

2%3.7

Line 13: simple_expression : term

2%3.7

Line 13: rel_expression : simple_expression

2%3.7

Line 13: logic_expression : rel_expression

2%3.7

Line 13: expression : variable ASSIGNOP logic_expression

j=2%3.7

Line 13: expression_statement : expression SEMICOLON

j=2%3.7;

Line 13: statement : expression_statement

j=2%3.7;

Line 13: statements : statements statement

int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;

Line 14: variable : ID

a

Line 14: factor : CONST_INT

4

Line 14: unary_expression : factor

4

Line 14: term : unary_expression

4

Line 14: simple_expression : term

4

Line 14: rel_expression : simple_expression

4

Line 14: logic_expression : rel_expression

4

Line 14: expression : variable ASSIGNOP logic_expression

a=4

Line 14: expression_statement : expression SEMICOLON

a=4;

Line 14: statement : expression_statement

a=4;

Line 14: statements : statements statement

int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;

Line 15: variable : ID

a

Line 15: factor : variable

a

Line 15: unary_expression : factor

a

Line 15: term : unary_expression

a

Line 15: simple_expression : term

a

Line 15: rel_expression : simple_expression

a

Line 15: logic_expression : rel_expression

a

Line 15: arguments : logic_expression

a

Line 15: argument_list : arguments

a

Line 15: factor : ID LPAREN argument_list RPAREN

func(a)

Line 15: unary_expression : factor

func(a)

Line 15: term : unary_expression

func(a)

Line 15: simple_expression : term

func(a)

Line 15: rel_expression : simple_expression

func(a)

Line 15: logic_expression : rel_expression

func(a)

Line 15: expression : logic_expression

func(a)

Line 15: expression_statement : expression SEMICOLON

func(a);

Line 15: statement : expression_statement

func(a);

Line 15: statements : statements statement

int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);

Line 16: variable : ID

b

Line 16: factor : CONST_INT

8

Line 16: unary_expression : factor

8

Line 16: term : unary_expression

8

Line 16: simple_expression : term

8

Line 16: rel_expression : simple_expression

8

Line 16: logic_expression : rel_expression

8

Line 16: expression : variable ASSIGNOP logic_expression

b=8

Line 16: expression_statement : expression SEMICOLON

b=8;

Line 16: statement : expression_statement

b=8;

Line 16: statements : statements statement

int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;

Line 17: factor : CONST_INT

0

Line 17: unary_expression : factor

0

Line 17: term : unary_expression

0

Line 17: simple_expression : term

0

Line 17: rel_expression : simple_expression

0

Line 17: logic_expression : rel_expression

0

Line 17: expression : logic_expression

0

Line 17: statement : RETURN expression SEMICOLON

return 0;

Line 17: statements : statements statement

int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;

Line 18: compound_statement : LCURL statements RCURL

{
int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
}


ScopeTable# 1.2
0 --> <i : ID> 
1 --> <c : ID> <j : ID> 
6 --> <a : ID> 

ScopeTable# 1
0 --> <b : ID> 
2 --> <func : ID> 
6 --> <a : ID> <main : ID> 

Line 18: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
}


Line 18: unit : func_definition

int main(){
int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
}



Line 18: program : program unit

int a,b;
int b;
int func(int a,int b){
int b;
return a;
}

int main(){
int a[2],c,i,j;
float c;
a[2.5]=1;
i=2.3;
j=2%3.7;
a=4;
func(a);
b=8;
return 0;
}



Line 19: start : program


ScopeTable# 1
0 --> <b : ID> 
2 --> <func : ID> 
6 --> <a : ID> <main : ID> 

Total lines: 19
Total errors: 2
